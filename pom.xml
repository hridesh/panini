<?xml version="1.0" encoding="UTF-8"?>

<!-- This POM's purposes are three-fold:
    
       1. To aggregate the modules directly under it.
       2. To provide some default configs to be inherited by POMs below it.
       3. To hold much of the required info for publication on Maven central.

     Notice that even though this root POM includes `examples`, that project
     does not identify `at-paninij` as its parent. This is to allow for
     `examples` to be a stand-alone example.

     For a description of the distinction between project aggregation and
     project inheritance, see:
     
         https://maven.apache.org/guides/introduction/introduction-to-the-pom.html

     For more information on the requirements to publish to Maven central, see:

         http://central.sonatype.org/pages/requirements.html

     Unfortunately, it seems that these tags (e.g. `<licenses>`, `<developers>)
     are not inherited, so this information needs to be manually adapted to
     other submodules in the repo.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.paninij</groupId>
  <artifactId>at-paninij</artifactId>
  <version>0.1.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>@PaniniJ</name>

  <description>
    @PaniniJ is an annotation-based realization of capsule-oriented programming
    in Java. Capsule-oriented programming is an implicitly concurrent
    programming model.
  </description>

  <url>http://hridesh.github.io/panini/</url>

  <licenses>
    <license>
      <name>GNU General Public License, Version 2</name>
      <url>http://opensource.org/licenses/GPL-2.0</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>David Johnston</name>
      <email>dwtj@iastate.edu</email>
      <url>https://github.com/dwtj</url>
      <organization>ISU Laboratory for Software Design</organization>
      <organizationUrl>http://design.cs.iastate.edu/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:hridesh/panini.git</connection>
    <developerConnection>scm:git:git@github.com:hridesh/panini.git</developerConnection>
    <url>git@github.com:hridesh/panini.git</url>
  </scm>

  <modules>
    <module>at-paninij-core</module>
    <module>at-paninij-examples</module>
    <!-- <module>at-paninij-analyses</module> --> <!-- Disabled until fixed on Windows. -->
    <module>at-paninij-benchmarks</module>
  </modules>

  <!-- Properties which should be inherited across the repos. -->
  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.lang.version>1.8</java.lang.version>

    <panini.gen.src.dir>
      ${project.build.directory}/generated-sources/panini
    </panini.gen.src.dir>
    <panini.gen.test.src.dir>
      ${project.build.directory}/generated-test-sources/panini
    </panini.gen.test.src.dir>

  </properties>

  <build>

    <!-- Some build plugins are used across the repo. Plugin versions and some
         simple default configurations should be inherited from here. -->
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>${java.lang.version}</source>
            <target>${java.lang.version}</target>
            <generatedSourcesDirectory>
              ${panini.gen.src.dir}
            </generatedSourcesDirectory>
            <generatedTestSourcesDirectory>
              ${panini.gen.test.src.dir}
            </generatedTestSourcesDirectory>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
        </plugin>

        <!-- Require Maven 3 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.0</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.2</version>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>


  <dependencyManagement>
    <dependencies>

      <!-- Some submodules are used across the repo. When one of the repo's
           subprojects uses one of these, these version numbers should be
           inherited. -->

      <!-- at-paninij-core -->
      <dependency>
        <groupId>org.paninij</groupId>
        <artifactId>at-paninij-runtime</artifactId>
        <version>0.1.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.paninij</groupId>
        <artifactId>at-paninij-proc</artifactId>
        <version>0.1.1-SNAPSHOT</version>
      </dependency>

      <!-- at-paninij-analyses -->
      <dependency>
        <groupId>org.paninij</groupId>
        <artifactId>at-paninij-soter</artifactId>
        <version>0.1.0</version>
      </dependency>

      <!-- at-paninij-benchmarks -->
      <dependency>
        <groupId>org.paninij</groupId>
        <artifactId>at-paninij-benchmarks-savina</artifactId>
        <version>0.1.1-SNAPSHOT</version>
      </dependency>

      <!-- Some common remote dependencies are used across the repo. When one
           of the repo's subprojects uses one of these, these version numbers
           should be inherited. -->

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>me.dwtj</groupId>
        <artifactId>java-compiler-runner</artifactId>
        <version>0.2.0</version>
      </dependency>

      <dependency>
        <groupId>com.google.testing.compile</groupId>
        <artifactId>compile-testing</artifactId>
        <version>0.6</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

</project>
